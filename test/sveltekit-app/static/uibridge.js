/*! @sashbot/uibridge v1.0.0 | MIT License | https://github.com/sashbot/uibridge-js */
var UIBridge=(()=>{var b=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var I=Object.prototype.hasOwnProperty;var T=(i,e)=>{for(var t in e)b(i,t,{get:e[t],enumerable:!0})},k=(i,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of _(e))!I.call(i,o)&&o!==t&&b(i,o,{get:()=>e[o],enumerable:!(n=C(e,o))||n.enumerable});return i};var O=i=>k(b({},"__esModule",{value:!0}),i);var A={};T(A,{CDIGenerator:()=>g,CommandRegistry:()=>u,SelectorEngine:()=>h,UIBridge:()=>m,clickCommand:()=>p,createUIBridge:()=>y,default:()=>H,initUIBridge:()=>v,name:()=>D,screenshotCommand:()=>f,version:()=>$});var u=class{constructor(){this.commands=new Map}register(e,t){if(!e||typeof e!="string")throw new Error("Command name must be a non-empty string");if(!t||typeof t.execute!="function")throw new Error("Command must have an execute function");let n=["name","description","parameters"];for(let o of n)if(!t[o])throw new Error(`Command must have a ${o} property`);this.commands.set(e,{...t,registeredAt:new Date().toISOString()})}get(e){return this.commands.get(e)||null}getAll(){return Array.from(this.commands.values())}has(e){return this.commands.has(e)}unregister(e){return this.commands.delete(e)}getNames(){return Array.from(this.commands.keys())}clear(){this.commands.clear()}size(){return this.commands.size}};var h=class{constructor(){this.strategies=new Map,this._setupDefaultStrategies()}_setupDefaultStrategies(){this.strategies.set("css",e=>document.querySelector(e)),this.strategies.set("cssAll",e=>Array.from(document.querySelectorAll(e))),this.strategies.set("xpath",e=>document.evaluate(e,document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue),this.strategies.set("xpathAll",e=>{let t=document.evaluate(e,document,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null),n=[];for(let o=0;o<t.snapshotLength;o++)n.push(t.snapshotItem(o));return n}),this.strategies.set("text",e=>{let t=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,!1),n;for(;n=t.nextNode();)if(n.textContent.trim()===e)return n.parentElement;return null}),this.strategies.set("partialText",e=>{let t=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,!1),n;for(;n=t.nextNode();)if(n.textContent.trim().includes(e))return n.parentElement;return null}),this.strategies.set("testId",e=>document.querySelector(`[data-testid="${e}"]`)),this.strategies.set("dataTest",e=>document.querySelector(`[data-test="${e}"]`)),this.strategies.set("label",e=>{let t=document.querySelectorAll("label");for(let n of t)if(n.textContent.trim()===e){let o=n.getAttribute("for");if(o)return document.getElementById(o);let s=n.querySelector("input, select, textarea");if(s)return s}return null}),this.strategies.set("placeholder",e=>document.querySelector(`[placeholder="${e}"]`)),this.strategies.set("ariaLabel",e=>document.querySelector(`[aria-label="${e}"]`)),this.strategies.set("role",e=>document.querySelector(`[role="${e}"]`))}find(e){if(typeof e=="string")return this.strategies.get("css")(e);if(typeof e=="object"&&e!==null){let t=["xpath","text","partialText","testId","dataTest","label","placeholder","ariaLabel","role","css"];for(let n of t)if(e[n]){let o=this.strategies.get(n);if(o){let s=o(e[n]);if(s)return s}}}throw new Error(`Invalid selector: ${JSON.stringify(e)}`)}findAll(e){if(typeof e=="string")return this.strategies.get("cssAll")(e);if(typeof e=="object"&&e!==null){if(e.xpath)return this.strategies.get("xpathAll")(e.xpath);if(e.css)return this.strategies.get("cssAll")(e.css);let t=this.find(e);return t?[t]:[]}throw new Error(`Invalid selector: ${JSON.stringify(e)}`)}registerStrategy(e,t){if(typeof t!="function")throw new Error("Strategy must be a function");this.strategies.set(e,t)}isVisible(e){if(!e)return!1;let t=e.getBoundingClientRect(),n=window.getComputedStyle(e);return t.width>0&&t.height>0&&n.display!=="none"&&n.visibility!=="hidden"&&parseFloat(n.opacity)>0&&t.top<window.innerHeight&&t.bottom>0&&t.left<window.innerWidth&&t.right>0}getElementInfo(e){if(!e)return null;let t=e.getBoundingClientRect(),n=window.getComputedStyle(e);return{tag:e.tagName.toLowerCase(),id:e.id||null,classes:Array.from(e.classList),text:e.textContent?.trim().substring(0,100)||"",attributes:this._getElementAttributes(e),position:{x:t.left,y:t.top,width:t.width,height:t.height},visible:this.isVisible(e),focusable:this._isFocusable(e)}}_getElementAttributes(e){let t={};for(let n of e.attributes)t[n.name]=n.value;return t}_isFocusable(e){return["input","select","textarea","button","a"].includes(e.tagName.toLowerCase())||e.hasAttribute("tabindex")||e.hasAttribute("contenteditable")}};var g=class{constructor(e){this.registry=e,this.version="1.0.0"}generateMarkdown(){let e=this.registry.getAll(),t=new Date().toISOString(),n=`# UIBridge Commands Documentation

`;return n+=`**Generated:** ${t}  
`,n+=`**Version:** ${this.version}  
`,n+=`**Total Commands:** ${e.length}

`,n+=`## Command Summary

`,n+=`| Command | Description | Parameters |
`,n+=`|---------|-------------|------------|
`,e.forEach(o=>{let s=o.parameters.map(r=>`${r.name}${r.required?"":"?"}`).join(", ");n+=`| **${o.name}** | ${o.description} | ${s||"None"} |
`}),n+=`
## Command Details

`,e.forEach(o=>{n+=`### ${o.name}

`,n+=`${o.description}

`,o.parameters.length>0&&(n+=`**Parameters:**

`,o.parameters.forEach(s=>{let r=s.required?"**required**":"*optional*";n+=`- \`${s.name}\` (${s.type}) - ${r}  
`,n+=`  ${s.description}
`}),n+=`
`),o.examples&&o.examples.length>0&&(n+=`**Examples:**

`,o.examples.forEach(s=>{n+=`\`\`\`javascript
${s}
\`\`\`

`})),n+=`---

`}),n}generateJSON(){let e=this.registry.getAll();return{version:this.version,generated:new Date().toISOString(),commands:e.map(t=>({name:t.name,description:t.description,parameters:t.parameters,examples:t.examples||[]}))}}async saveToFile(e="markdown"){let t=e==="json"?JSON.stringify(this.generateJSON(),null,2):this.generateMarkdown(),n=new Blob([t],{type:e==="json"?"application/json":"text/markdown"}),o=URL.createObjectURL(n),s=document.createElement("a");s.href=o,s.download=`uibridge-commands.${e==="json"?"json":"md"}`,s.click(),URL.revokeObjectURL(o)}generateTypeScript(){let e=this.registry.getAll(),t=`// UIBridge Command Definitions
`;return t+=`// Generated: ${new Date().toISOString()}

`,e.forEach(n=>{let o=n.parameters.filter(s=>!s.required);o.length>0&&(t+=`interface ${this._capitalize(n.name)}Options {
`,o.forEach(s=>{t+=`  ${s.name}?: ${this._mapTypeToTS(s.type)}; // ${s.description}
`}),t+=`}

`)}),t+=`interface UIBridge {
`,e.forEach(n=>{let o=n.parameters.filter(c=>c.required),s=n.parameters.filter(c=>!c.required),r=`  ${n.name}(`;o.forEach((c,a)=>{a>0&&(r+=", "),r+=`${c.name}: ${this._mapTypeToTS(c.type)}`}),s.length>0&&(o.length>0&&(r+=", "),r+=`options?: ${this._capitalize(n.name)}Options`),r+=`): Promise<any>; // ${n.description}
`,t+=r}),t+=`}

`,t+=`export { UIBridge };
`,e.forEach(n=>{n.parameters.filter(s=>!s.required).length>0&&(t+=`export { ${this._capitalize(n.name)}Options };
`)}),t}generateOpenAPI(){let e=this.registry.getAll(),t={openapi:"3.0.0",info:{title:"UIBridge API",description:"In-app automation framework for web applications",version:this.version,contact:{name:"UIBridge Team"}},servers:[{url:"http://localhost:3000",description:"Local development server"}],paths:{},components:{schemas:{}}};return e.forEach(n=>{let o=`/commands/${n.name}`;t.paths[o]={post:{summary:n.description,description:n.description,requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:this._generateJSONSchema(n.parameters),required:n.parameters.filter(s=>s.required).map(s=>s.name)}}}},responses:{200:{description:"Command executed successfully",content:{"application/json":{schema:{type:"object",properties:{success:{type:"boolean"},result:{type:"object"},timestamp:{type:"string",format:"date-time"}}}}}},400:{description:"Invalid parameters"},500:{description:"Command execution failed"}}}}}),t}getStatistics(){let e=this.registry.getAll();return{totalCommands:e.length,commandNames:e.map(t=>t.name),totalParameters:e.reduce((t,n)=>t+n.parameters.length,0),requiredParameters:e.reduce((t,n)=>t+n.parameters.filter(o=>o.required).length,0),optionalParameters:e.reduce((t,n)=>t+n.parameters.filter(o=>!o.required).length,0),commandsWithExamples:e.filter(t=>t.examples&&t.examples.length>0).length,averageParametersPerCommand:Math.round(e.reduce((t,n)=>t+n.parameters.length,0)/e.length*100)/100,lastGenerated:new Date().toISOString()}}_capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}_mapTypeToTS(e){return{string:"string",number:"number",boolean:"boolean",object:"object",array:"any[]",Selector:"string | object",ClickOptions:"object",ScreenshotOptions:"object"}[e]||"any"}_generateJSONSchema(e){let t={};return e.forEach(n=>{t[n.name]={type:this._mapTypeToJSONSchema(n.type),description:n.description},n.default!==void 0&&(t[n.name].default=n.default)}),t}_mapTypeToJSONSchema(e){return{string:"string",number:"number",boolean:"boolean",object:"object",array:"array",Selector:"string",ClickOptions:"object",ScreenshotOptions:"object"}[e]||"string"}};var p={name:"click",description:"Clicks on an element using synthetic mouse events",examples:["execute('click', '#submit-button')","execute('click', { text: 'Submit' })","execute('click', { testId: 'login-btn' })","execute('click', '#button', { position: 'center', clickCount: 2 })"],parameters:[{name:"selector",type:"Selector",required:!0,description:"Element to click (string, CSS selector, or selector object)"},{name:"options",type:"ClickOptions",required:!1,description:"Click options: { force?, position?, button?, clickCount?, delay? }"}],async execute(i,e,t={}){let n=i.findElement(e);if(!n)throw new Error(`Element not found: ${JSON.stringify(e)}`);let o={force:!1,position:"center",button:"left",clickCount:1,delay:0,scrollIntoView:!0,...t};if(i._log(`Clicking element: ${i.selectorEngine.getElementInfo(n)?.tag||"unknown"}`),o.scrollIntoView&&(n.scrollIntoView({behavior:"smooth",block:"center"}),await new Promise(a=>setTimeout(a,100))),!o.force&&!i.selectorEngine.isVisible(n))throw new Error("Element is not visible. Use { force: true } to click anyway.");if(!o.force&&!this._isElementActionable(n))throw new Error("Element is covered by another element. Use { force: true } to click anyway.");let s=n.getBoundingClientRect(),r=this._calculatePosition(s,o.position),c={bubbles:!0,cancelable:!0,view:window,clientX:r.x,clientY:r.y,button:this._getButtonCode(o.button),buttons:this._getButtonsCode(o.button),detail:o.clickCount};try{n.dispatchEvent(new MouseEvent("mouseover",c)),n.dispatchEvent(new MouseEvent("mouseenter",c)),n.dispatchEvent(new MouseEvent("mousedown",c)),o.delay>0&&await new Promise(a=>setTimeout(a,o.delay)),n.dispatchEvent(new MouseEvent("mouseup",c));for(let a=0;a<o.clickCount;a++)a>0&&await new Promise(l=>setTimeout(l,50)),n.dispatchEvent(new MouseEvent("click",{...c,detail:a+1}));i.selectorEngine._isFocusable(n)&&n.focus(),await this._handleSpecialElements(n,o)}catch(a){throw new Error(`Failed to click element: ${a.message}`)}return{success:!0,element:i.selectorEngine.getElementInfo(n),position:r,timestamp:new Date().toISOString()}},_isElementActionable(i){let e=i.getBoundingClientRect(),t=e.left+e.width/2,n=e.top+e.height/2,o=document.elementFromPoint(t,n);return i===o||i.contains(o)},_calculatePosition(i,e){let t={center:{x:i.left+i.width/2,y:i.top+i.height/2},topLeft:{x:i.left+1,y:i.top+1},topRight:{x:i.right-1,y:i.top+1},bottomLeft:{x:i.left+1,y:i.bottom-1},bottomRight:{x:i.right-1,y:i.bottom-1},topCenter:{x:i.left+i.width/2,y:i.top+1},bottomCenter:{x:i.left+i.width/2,y:i.bottom-1},leftCenter:{x:i.left+1,y:i.top+i.height/2},rightCenter:{x:i.right-1,y:i.top+i.height/2}};return t[e]||t.center},_getButtonCode(i){return{left:0,middle:1,right:2}[i]||0},_getButtonsCode(i){return{left:1,middle:4,right:2}[i]||1},async _handleSpecialElements(i,e){let t=i.tagName.toLowerCase(),n=i.type?.toLowerCase();t==="button"&&i.type==="submit"&&i.closest("form")||t==="input"&&(n==="checkbox"||n==="radio")||(t==="select"&&setTimeout(()=>{i.dispatchEvent(new Event("change",{bubbles:!0}))},10),t==="a"&&i.href)}};var f={name:"screenshot",description:"Takes a screenshot of the page or a specific element",examples:["execute('screenshot')","execute('screenshot', { format: 'png', quality: 0.9 })","execute('screenshot', { selector: '#main-content' })","execute('screenshot', { fullPage: true, saveConfig: { autoSave: true, folder: 'tests' } })"],parameters:[{name:"options",type:"ScreenshotOptions",required:!1,description:"Screenshot options: { selector?, format?, quality?, fullPage?, saveConfig? }"}],async execute(i,e={}){console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Starting screenshot command execution"),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Raw options received:",JSON.stringify(e,null,2)),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Bridge config:",JSON.stringify(i.config.defaultScreenshotConfig,null,2));let t={selector:null,format:"png",quality:.92,fullPage:!1,excludeSelectors:[],backgroundColor:null,scale:window.devicePixelRatio||1,saveConfig:{...i.config.defaultScreenshotConfig,...e.saveConfig},...e};console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Final processed options:",JSON.stringify(t,null,2)),i._log("Taking screenshot with options:",t);let n=document.body;if(t.selector&&(n=i.findElement(t.selector),!n))throw new Error(`Element not found for screenshot: ${JSON.stringify(t.selector)}`);try{console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Target element:",n?.tagName,n?.id,n?.className),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Target element dimensions:",{width:n?.offsetWidth,height:n?.offsetHeight,scrollWidth:n?.scrollWidth,scrollHeight:n?.scrollHeight}),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Loading html2canvas..."),await this._ensureHtml2Canvas(),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] html2canvas loaded:",!!window.html2canvas);let o=this._hideElements(t.excludeSelectors),s={useCORS:!0,allowTaint:!1,backgroundColor:t.backgroundColor,scale:t.scale,logging:!0,width:t.fullPage?document.documentElement.scrollWidth:void 0,height:t.fullPage?document.documentElement.scrollHeight:void 0,windowWidth:t.fullPage?document.documentElement.scrollWidth:void 0,windowHeight:t.fullPage?document.documentElement.scrollHeight:void 0,x:t.fullPage?0:void 0,y:t.fullPage?0:void 0,foreignObjectRendering:!0,imageTimeout:15e3,removeContainer:!0};console.log("\u{1F5BC}\uFE0F [SCREENSHOT] html2canvas options:",JSON.stringify(s,null,2)),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Starting html2canvas capture...");let r=await window.html2canvas(n,s);console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Canvas created:",{width:r.width,height:r.height,hasData:r.getContext("2d").getImageData(0,0,1,1).data.some(w=>w!==0)}),this._restoreElements(o);let c=`image/${t.format}`;console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Converting to format:",c,"quality:",t.quality);let a=r.toDataURL(c,t.quality);console.log("\u{1F5BC}\uFE0F [SCREENSHOT] DataURL created, length:",a.length,"starts with:",a.substring(0,50));let l=this._generateFileName(t);console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Generated filename:",l),t.saveConfig.autoSave?(console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Auto-save enabled, saving..."),await this._saveScreenshot(a,l,t.saveConfig),console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Save completed")):console.log("\u{1F5BC}\uFE0F [SCREENSHOT] Auto-save disabled");let d={success:!0,dataUrl:a,width:r.width,height:r.height,format:t.format,fileName:l,filePath:t.saveConfig.folder?`${t.saveConfig.folder}/${l}`:l,size:Math.round(a.length*.75),timestamp:new Date().toISOString(),saveConfig:t.saveConfig};return t.selector&&(d.element=i.selectorEngine.getElementInfo(n),t.saveConfig.includeMetadata&&(d.metadata={selector:t.selector,element:d.element,viewport:{width:window.innerWidth,height:window.innerHeight},userAgent:navigator.userAgent,timestamp:d.timestamp})),i._log(`Screenshot captured: ${d.width}x${d.height}, ${d.size} bytes, saved as: ${d.filePath}`),d}catch(o){throw new Error(`Failed to take screenshot: ${o.message}`)}},_generateFileName(i){let e=i.saveConfig;if(e.customName)return this._ensureExtension(e.customName,i.format);let t=e.prefix||"screenshot";if(e.includeMetadata){if(i.selector){let n=typeof i.selector=="string"?i.selector.replace(/[#.]/g,"").substring(0,20):"element";t+=`_${n}`}i.fullPage&&(t+="_fullpage"),t+=`_${i.width||"auto"}x${i.height||"auto"}`}if(e.timestamp){let n=new Date().toISOString().replace(/[:.]/g,"-").replace("T","_").substring(0,19);t+=`_${n}`}return this._ensureExtension(t,i.format)},_ensureExtension(i,e){let t=e==="jpeg"?"jpg":e;return i.toLowerCase().endsWith(`.${t}`)?i:`${i}.${t}`},async _saveScreenshot(i,e,t){try{await this._downloadImage(i,e),t.serverEndpoint&&await this._saveToServer(i,e,t),t.persistInBrowser&&await this._saveToIndexedDB(i,e,t)}catch(n){throw console.warn("Failed to save screenshot:",n),new Error(`Screenshot save failed: ${n.message}`)}},async _saveToServer(i,e,t){if(t.serverEndpoint)try{let n=await fetch(t.serverEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fileName:e,folder:t.folder,dataUrl:i,timestamp:new Date().toISOString()})});if(!n.ok)throw new Error(`Server save failed: ${n.status} ${n.statusText}`);console.log(`Screenshot saved to server: ${e}`)}catch(n){throw console.error("Server save error:",n),n}},async _saveToIndexedDB(i,e,t){return new Promise((n,o)=>{let s="UIBridgeScreenshots",r="screenshots",c=indexedDB.open(s,1);c.onerror=()=>o(new Error("IndexedDB open failed")),c.onupgradeneeded=a=>{let l=a.target.result;if(!l.objectStoreNames.contains(r)){let d=l.createObjectStore(r,{keyPath:"id",autoIncrement:!0});d.createIndex("fileName","fileName",{unique:!1}),d.createIndex("timestamp","timestamp",{unique:!1})}},c.onsuccess=a=>{let w=a.target.result.transaction([r],"readwrite").objectStore(r),E={fileName:e,folder:t.folder,dataUrl:i,timestamp:new Date().toISOString(),size:Math.round(i.length*.75)},S=w.add(E);S.onsuccess=()=>{console.log(`Screenshot saved to IndexedDB: ${e}`),n()},S.onerror=()=>{o(new Error("IndexedDB save failed"))}}})},async _ensureHtml2Canvas(){if(!window.html2canvas)return new Promise((i,e)=>{let t=document.createElement("script");t.src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js",t.integrity="sha512-dK1lSuLiS6pQ6nrGT7iQFmQ5xOFCHBcynHgSc1h5tEGE6a86/30XnRrOXKmr5AZ+z3OqQQ4SdMzS0i1h1D5w3g==",t.crossOrigin="anonymous",t.onload=()=>{window.html2canvas?i():e(new Error("html2canvas failed to load properly"))},t.onerror=()=>{e(new Error("Failed to load html2canvas library"))};let n=document.querySelector('script[src*="html2canvas"]');if(n){window.html2canvas?i():(n.onload=i,n.onerror=e);return}document.head.appendChild(t)})},_hideElements(i){let e=[];for(let t of i)try{let n=document.querySelectorAll(t);for(let o of n){let s=o.style.display;o.style.display="none",e.push({element:o,originalDisplay:s})}}catch(n){console.warn(`Invalid selector for hiding: ${t}`,n)}return e},_restoreElements(i){for(let{element:e,originalDisplay:t}of i)e.style.display=t},_downloadImage(i,e){try{let t=document.createElement("a");t.download=e,t.href=i,document.body.appendChild(t),t.click(),document.body.removeChild(t)}catch(t){console.warn("Failed to auto-download screenshot:",t)}}};var x={name:"help",description:"Get help information about UIBridge commands and usage patterns for AI automation",examples:["execute('help')","execute('help', 'click')","execute('help', 'screenshot')","execute('--help')"],parameters:[{name:"commandName",type:"string",required:!1,description:"Specific command to get help for (optional)"}],async execute(i,e=null){return i.getHelp(e)}};var m=class i{constructor(e={}){this.config={debug:!1,allowedOrigins:["*"],commands:["click","screenshot","help"],generateCDI:!0,enableHttpDiscovery:!1,autoInit:!0,version:"1.0.0",defaultScreenshotConfig:{autoSave:!1,folder:"uibridge-screenshots",prefix:"screenshot",timestamp:!0,includeMetadata:!1,persistInBrowser:!1,serverEndpoint:null,...e.defaultScreenshotConfig},...e},this.registry=new u,this.selectorEngine=new h,this.cdiGenerator=null,this._isInitialized=!1,this._initStartTime=null,this._commandHistory=[],this.config.autoInit&&typeof window<"u"&&typeof document<"u"&&(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>this.init()):setTimeout(()=>this.init(),0))}async init(){if(this._isInitialized){this._log("UIBridge already initialized");return}this._initStartTime=typeof performance<"u"?performance.now():Date.now(),this._log("Initializing UIBridge...",this.config);try{await this._registerCoreCommands(),this.cdiGenerator=new g(this.registry),this._setupDiscovery(),this._setupGlobalAPI(),this._isInitialized=!0;let e=(typeof performance<"u"?performance.now():Date.now())-this._initStartTime;this._log(`UIBridge initialized successfully in ${e.toFixed(2)}ms`,{commands:this.registry.getNames(),version:this.config.version}),this.config.generateCDI&&this._generateCDI(),this._dispatchEvent("uibridge:initialized",{version:this.config.version,commands:this.registry.getNames(),initTime:e})}catch(e){throw this._log("Failed to initialize UIBridge:",e),new Error(`UIBridge initialization failed: ${e.message}`)}}async execute(e,...t){if(e==="help"||e==="--help")return this.getHelp(t[0]);if(!this._isInitialized)throw new Error("UIBridge not initialized. Call init() first.");let n=this.registry.get(e);if(!n){let r=this.registry.getAll().map(c=>c.name).join(", ");throw new Error(`Unknown command: ${e}. Available commands: ${r}. Use 'help' for detailed information.`)}let o=typeof performance<"u"?performance.now():Date.now(),s=this._generateExecutionId();this._log(`Executing command: ${e}`,{args:t,executionId:s});try{let r={id:s,command:e,args:t,startTime:new Date().toISOString(),status:"running"};this._commandHistory.push(r);let c=await n.execute(this,...t),l=(typeof performance<"u"?performance.now():Date.now())-o;r.status="completed",r.duration=l,r.result=c,r.endTime=new Date().toISOString(),this._log(`Command completed: ${e} (${l.toFixed(2)}ms)`,c),this._dispatchEvent("uibridge:command",{command:e,args:t,result:c,duration:l,executionId:s});let d={...c,command:e,duration:l,timestamp:new Date().toISOString()};return this._addToHistory({command:e,args:t,result:d,duration:l,timestamp:new Date().toISOString(),status:"completed"}),d}catch(r){let a=(typeof performance<"u"?performance.now():Date.now())-o,l=this._commandHistory[this._commandHistory.length-1];throw l&&l.id===s&&(l.status="failed",l.error=r.message,l.duration=a,l.endTime=new Date().toISOString()),this._log(`Command failed: ${e} (${a.toFixed(2)}ms)`,r),this._dispatchEvent("uibridge:error",{command:e,args:t,error:r.message,duration:a,executionId:s}),this._addToHistory({command:e,args:t,error:r.message,duration:a,timestamp:new Date().toISOString(),status:"failed"}),r}}findElement(e){return this.selectorEngine.find(e)}findElements(e){return this.selectorEngine.findAll(e)}discover(){return this.registry.getAll().map(e=>({name:e.name,description:e.description,parameters:e.parameters,examples:e.examples||[]}))}getHistory(e=50){return this._commandHistory.slice(-e)}clearHistory(){this._commandHistory=[],this._log("Command history cleared")}getStatus(){return{initialized:this._isInitialized,version:this.config.version,commands:this.registry.getNames(),commandCount:this.registry.size(),historyLength:this._commandHistory.length,config:{...this.config},uptime:this._initStartTime?(typeof performance<"u"?performance.now():Date.now())-this._initStartTime:0}}registerCommand(e,t){this.registry.register(e,t),this._log(`Custom command registered: ${e}`),this.cdiGenerator&&this._generateCDI()}unregisterCommand(e){let t=this.registry.unregister(e);return t&&(this._log(`Command unregistered: ${e}`),this.cdiGenerator&&this._generateCDI()),t}configureScreenshots(e){this.config.defaultScreenshotConfig={...this.config.defaultScreenshotConfig,...e},this._log("Screenshot configuration updated:",this.config.defaultScreenshotConfig)}getScreenshotConfig(){return{...this.config.defaultScreenshotConfig}}async _registerCoreCommands(){let e=[{name:"click",implementation:p},{name:"screenshot",implementation:f},{name:"help",implementation:x}];for(let{name:t,implementation:n}of e)this.config.commands.includes(t)&&(this.registry.register(t,n),this._log(`Registered core command: ${t}`))}_setupDiscovery(){this.config.enableHttpDiscovery&&(window.__uibridge_discovery__=()=>this.discover(),window.__uibridge_status__=()=>this.getStatus(),this._log("HTTP discovery endpoints enabled"))}_setupGlobalAPI(){window.UIBridge=i,window.uibridge=this,window.__uibridge__={execute:this.execute.bind(this),discover:this.discover.bind(this),findElement:this.findElement.bind(this),findElements:this.findElements.bind(this),getStatus:this.getStatus.bind(this),getHistory:this.getHistory.bind(this)},this._log("Global APIs exposed")}_generateCDI(){if(this.cdiGenerator)try{this.config.debug&&(console.log("=== UIBridge Command Discovery Interface ==="),console.log(this.cdiGenerator.generateMarkdown()),console.log("=== End CDI ===")),window.__uibridge_cdi__={markdown:()=>this.cdiGenerator.generateMarkdown(),json:()=>this.cdiGenerator.generateJSON(),save:e=>this.cdiGenerator.saveToFile(e)}}catch(e){this._log("Failed to generate CDI:",e)}}_generateExecutionId(){return`exec_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}_dispatchEvent(e,t){if(typeof window<"u"&&window.dispatchEvent){let n=new CustomEvent(e,{detail:t});window.dispatchEvent(n)}}_log(...e){this.config.debug&&console.log("[UIBridge]",...e)}getHelp(e=null){if(e){let n=this.registry.get(e);if(!n){let o=this.registry.getAll().map(s=>s.name).join(", ");return{error:`Unknown command: ${e}`,availableCommands:o,suggestion:"Use 'help' without arguments to see all commands",aiGuidance:`AI Agents: Use execute('help') to discover available commands or check spelling of '${e}'`}}return{command:n.name,description:n.description,parameters:n.parameters,examples:n.examples||[],usage:this._generateUsage(n),aiTips:this._getAITipsForCommand(n.name)}}let t=this.registry.getAll();return{framework:"UIBridge",version:this.config.version||"1.0.0",description:"In-app automation framework for web applications - designed for AI agent control",aiQuickStart:{step1:"Execute commands using: await uibridge.execute('commandName', ...args)",step2:"Find elements using selectors: CSS, text content, test IDs, XPath",step3:"Handle errors with try/catch blocks",step4:"Use await for all commands as they return promises"},commands:t.map(n=>({name:n.name,description:n.description,parameters:n.parameters.length,usage:this._generateUsage(n),aiUseCase:this._getAIUseCase(n.name)})),automationPatterns:{"Click any button":{pattern:"execute('click', selector)",examples:["execute('click', '#submit')","execute('click', { text: 'Submit' })","execute('click', { testId: 'submit-btn' })"],aiTip:"Try multiple selector strategies if one fails"},"Take screenshots":{pattern:"execute('screenshot', options)",examples:["execute('screenshot', { fullPage: true })","execute('screenshot', { selector: '#content' })","execute('screenshot', { saveConfig: { autoSave: true } })"],aiTip:"Screenshots are useful for verification and debugging"},"Discover available actions":{pattern:"discover() or execute('help')",examples:["const commands = uibridge.discover()","const help = await uibridge.execute('help')"],aiTip:"Use this to understand what actions are available"}},selectorStrategies:{priority:"Try strategies in this order for best results",strategies:{1:{method:"Test ID",syntax:"{ testId: 'element-id' }",reliability:"highest"},2:{method:"CSS ID",syntax:"'#element-id'",reliability:"high"},3:{method:"CSS Class",syntax:"'.class-name'",reliability:"medium"},4:{method:"Text Content",syntax:"{ text: 'Button Text' }",reliability:"medium"},5:{method:"Aria Label",syntax:"{ ariaLabel: 'Button Label' }",reliability:"medium"},6:{method:"XPath",syntax:`{ xpath: '//button[text()="Submit"]' }`,reliability:"advanced"}}},aiBestPractices:["Always use await when executing commands","Wrap commands in try/catch blocks for error handling","Use specific selectors (ID, testId) when possible","Take screenshots to verify actions completed successfully","Use help('commandName') to understand specific command options","Check element existence before interaction","Wait for dynamic content to load before acting"],errorHandling:{"Element not found":{solution:"Try different selector strategies or wait for element to appear",code:"try { await execute('click', '#btn'); } catch(e) { await execute('click', {text: 'Submit'}); }"},"Command failed":{solution:"Check command syntax and parameters",code:"const help = await execute('help', 'click'); console.log(help.usage);"},"Screenshot failed":{solution:"Ensure element is visible and page is loaded",code:"await execute('screenshot', { selector: 'body', fullPage: true });"}},workflowPatterns:{"Form submission":["1. Find and fill input fields","2. Click submit button","3. Take screenshot to verify","Example: execute('click', { text: 'Submit' })"],"Navigation and verification":["1. Take screenshot of current state","2. Click navigation element","3. Wait for page load","4. Take screenshot to verify navigation"],"Content interaction":["1. Find target element using multiple selector strategies","2. Execute action (click, screenshot, etc.)","3. Verify result with screenshot or status check"]}}}_getAITipsForCommand(e){return{click:["Try multiple selector strategies if element not found","Use force: true option if element is covered","Consider scroll behavior - element might be off-screen"],screenshot:["Use fullPage: true for complete page capture","Specify selector for element-specific screenshots","Set saveConfig for automatic file saving"],help:["Use without arguments for full command list","Specify command name for detailed help","Check usage examples for proper syntax"]}[e]||["Execute with proper await syntax","Handle errors with try/catch"]}_getAIUseCase(e){return{click:"Interact with buttons, links, form elements, and any clickable UI component",screenshot:"Capture visual state for verification, debugging, or documentation",help:"Discover available commands and learn proper usage syntax"}[e]||"General automation command"}_generateUsage(e){let t=e.parameters.map(n=>n.required?n.name:`[${n.name}]`).join(", ");return`execute('${e.name}'${t?", "+t:""})`}_addToHistory(e){this._commandHistory||(this._commandHistory=[]),this._commandHistory.unshift(e),this._commandHistory.length>50&&(this._commandHistory=this._commandHistory.slice(0,50))}};typeof window<"u"&&!window.UIBridge&&(window.UIBridge=m);function y(i={}){return new m({debug:!0,generateCDI:!0,enableHttpDiscovery:!0,...i})}async function v(i={}){let e=y(i);return await e.init(),e}if(typeof window<"u"&&typeof document<"u"&&!window.uibridge){let i=y({debug:!1,generateCDI:!1,autoInit:!0});window.uibridge=i,window.UIBridge=m,window.location?.hostname==="localhost"&&(window.createUIBridge=y,window.initUIBridge=v)}var $="1.0.0",D="UIBridge",H=m;return O(A);})();
//# sourceMappingURL=uibridge.min.js.map
